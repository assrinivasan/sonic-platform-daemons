# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto_out import linkmgr_grpc_driver_pb2 as proto__out_dot_linkmgr__grpc__driver__pb2


class DualToRActiveStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.QueryAdminForwardingPortState = channel.unary_unary(
                '/DualToRActive/QueryAdminForwardingPortState',
                request_serializer=proto__out_dot_linkmgr__grpc__driver__pb2.AdminRequest.SerializeToString,
                response_deserializer=proto__out_dot_linkmgr__grpc__driver__pb2.AdminReply.FromString,
                )
        self.SetAdminForwardingPortState = channel.unary_unary(
                '/DualToRActive/SetAdminForwardingPortState',
                request_serializer=proto__out_dot_linkmgr__grpc__driver__pb2.AdminRequest.SerializeToString,
                response_deserializer=proto__out_dot_linkmgr__grpc__driver__pb2.AdminReply.FromString,
                )
        self.QueryOperationPortState = channel.unary_unary(
                '/DualToRActive/QueryOperationPortState',
                request_serializer=proto__out_dot_linkmgr__grpc__driver__pb2.OperationRequest.SerializeToString,
                response_deserializer=proto__out_dot_linkmgr__grpc__driver__pb2.OperationReply.FromString,
                )
        self.QueryLinkState = channel.unary_unary(
                '/DualToRActive/QueryLinkState',
                request_serializer=proto__out_dot_linkmgr__grpc__driver__pb2.LinkStateRequest.SerializeToString,
                response_deserializer=proto__out_dot_linkmgr__grpc__driver__pb2.LinkStateReply.FromString,
                )
        self.QueryServerVersion = channel.unary_unary(
                '/DualToRActive/QueryServerVersion',
                request_serializer=proto__out_dot_linkmgr__grpc__driver__pb2.ServerVersionRequest.SerializeToString,
                response_deserializer=proto__out_dot_linkmgr__grpc__driver__pb2.ServerVersionReply.FromString,
                )


class DualToRActiveServicer(object):
    """Missing associated documentation comment in .proto file."""

    def QueryAdminForwardingPortState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAdminForwardingPortState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryOperationPortState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryLinkState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryServerVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DualToRActiveServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'QueryAdminForwardingPortState': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryAdminForwardingPortState,
                    request_deserializer=proto__out_dot_linkmgr__grpc__driver__pb2.AdminRequest.FromString,
                    response_serializer=proto__out_dot_linkmgr__grpc__driver__pb2.AdminReply.SerializeToString,
            ),
            'SetAdminForwardingPortState': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAdminForwardingPortState,
                    request_deserializer=proto__out_dot_linkmgr__grpc__driver__pb2.AdminRequest.FromString,
                    response_serializer=proto__out_dot_linkmgr__grpc__driver__pb2.AdminReply.SerializeToString,
            ),
            'QueryOperationPortState': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryOperationPortState,
                    request_deserializer=proto__out_dot_linkmgr__grpc__driver__pb2.OperationRequest.FromString,
                    response_serializer=proto__out_dot_linkmgr__grpc__driver__pb2.OperationReply.SerializeToString,
            ),
            'QueryLinkState': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryLinkState,
                    request_deserializer=proto__out_dot_linkmgr__grpc__driver__pb2.LinkStateRequest.FromString,
                    response_serializer=proto__out_dot_linkmgr__grpc__driver__pb2.LinkStateReply.SerializeToString,
            ),
            'QueryServerVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryServerVersion,
                    request_deserializer=proto__out_dot_linkmgr__grpc__driver__pb2.ServerVersionRequest.FromString,
                    response_serializer=proto__out_dot_linkmgr__grpc__driver__pb2.ServerVersionReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'DualToRActive', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DualToRActive(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def QueryAdminForwardingPortState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DualToRActive/QueryAdminForwardingPortState',
            proto__out_dot_linkmgr__grpc__driver__pb2.AdminRequest.SerializeToString,
            proto__out_dot_linkmgr__grpc__driver__pb2.AdminReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAdminForwardingPortState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DualToRActive/SetAdminForwardingPortState',
            proto__out_dot_linkmgr__grpc__driver__pb2.AdminRequest.SerializeToString,
            proto__out_dot_linkmgr__grpc__driver__pb2.AdminReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryOperationPortState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DualToRActive/QueryOperationPortState',
            proto__out_dot_linkmgr__grpc__driver__pb2.OperationRequest.SerializeToString,
            proto__out_dot_linkmgr__grpc__driver__pb2.OperationReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryLinkState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DualToRActive/QueryLinkState',
            proto__out_dot_linkmgr__grpc__driver__pb2.LinkStateRequest.SerializeToString,
            proto__out_dot_linkmgr__grpc__driver__pb2.LinkStateReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryServerVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DualToRActive/QueryServerVersion',
            proto__out_dot_linkmgr__grpc__driver__pb2.ServerVersionRequest.SerializeToString,
            proto__out_dot_linkmgr__grpc__driver__pb2.ServerVersionReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class GracefulRestartStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.NotifyGracefulRestartStart = channel.unary_stream(
                '/GracefulRestart/NotifyGracefulRestartStart',
                request_serializer=proto__out_dot_linkmgr__grpc__driver__pb2.GracefulAdminRequest.SerializeToString,
                response_deserializer=proto__out_dot_linkmgr__grpc__driver__pb2.GracefulAdminResponse.FromString,
                )


class GracefulRestartServicer(object):
    """Missing associated documentation comment in .proto file."""

    def NotifyGracefulRestartStart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GracefulRestartServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'NotifyGracefulRestartStart': grpc.unary_stream_rpc_method_handler(
                    servicer.NotifyGracefulRestartStart,
                    request_deserializer=proto__out_dot_linkmgr__grpc__driver__pb2.GracefulAdminRequest.FromString,
                    response_serializer=proto__out_dot_linkmgr__grpc__driver__pb2.GracefulAdminResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'GracefulRestart', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GracefulRestart(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def NotifyGracefulRestartStart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/GracefulRestart/NotifyGracefulRestartStart',
            proto__out_dot_linkmgr__grpc__driver__pb2.GracefulAdminRequest.SerializeToString,
            proto__out_dot_linkmgr__grpc__driver__pb2.GracefulAdminResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
